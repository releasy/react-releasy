// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`should render a valid ReleasyConsumer 1`] = `
ReleasyConsumer {
  "_reactInternalFiber": FiberNode {
    "_debugID": 50,
    "_debugIsCurrentlyTiming": false,
    "_debugOwner": FiberNode {
      "_debugID": 49,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": [Circular],
      "childExpirationTime": 0,
      "effectTag": 1,
      "expirationTime": 0,
      "firstContextDependency": null,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "Component": [Function],
        "context": Object {
          "environment": RelayModernEnvironment {
            "__setNet": [Function],
            "_deferrableSelections": Set {},
            "_network": Object {
              "execute": [Function],
              "executeWithEvents": [Function],
            },
            "_publishQueue": RelayPublishQueue {
              "_appliedOptimisticUpdates": Set {},
              "_backup": Object {},
              "_handlerProvider": [Function],
              "_pendingBackupRebase": false,
              "_pendingData": Set {},
              "_pendingOptimisticUpdates": Set {},
              "_pendingUpdaters": Set {},
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
            },
            "_store": RelayMarkSweepStore {
              "_gcEnabled": true,
              "_hasScheduledGC": false,
              "_index": 0,
              "_recordSource": Object {},
              "_roots": Map {},
              "_subscriptions": Set {},
              "_updatedRecordIDs": Object {},
            },
            "configName": undefined,
            "unstable_internal": Object {
              "areEqualSelectors": [Function],
              "createFragmentSpecResolver": [Function],
              "createOperationSelector": [Function],
              "getDataIDsFromObject": [Function],
              "getFragment": [Function],
              "getRequest": [Function],
              "getSelector": [Function],
              "getSelectorList": [Function],
              "getSelectorsFromObject": [Function],
              "getVariablesFromObject": [Function],
            },
          },
        },
        "props": Object {
          "children": <div />,
        },
      },
      "memoizedState": Object {
        "context": Object {
          "environment": RelayModernEnvironment {
            "__setNet": [Function],
            "_deferrableSelections": Set {},
            "_network": Object {
              "execute": [Function],
              "executeWithEvents": [Function],
            },
            "_publishQueue": RelayPublishQueue {
              "_appliedOptimisticUpdates": Set {},
              "_backup": Object {},
              "_handlerProvider": [Function],
              "_pendingBackupRebase": false,
              "_pendingData": Set {},
              "_pendingOptimisticUpdates": Set {},
              "_pendingUpdaters": Set {},
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
            },
            "_store": RelayMarkSweepStore {
              "_gcEnabled": true,
              "_hasScheduledGC": false,
              "_index": 0,
              "_recordSource": Object {},
              "_roots": Map {},
              "_subscriptions": Set {},
              "_updatedRecordIDs": Object {},
            },
            "configName": undefined,
            "unstable_internal": Object {
              "areEqualSelectors": [Function],
              "createFragmentSpecResolver": [Function],
              "createOperationSelector": [Function],
              "getDataIDsFromObject": [Function],
              "getFragment": [Function],
              "getRequest": [Function],
              "getSelector": [Function],
              "getSelectorList": [Function],
              "getSelectorsFromObject": [Function],
              "getVariablesFromObject": [Function],
            },
          },
        },
        "mount": true,
        "props": Object {
          "children": <div />,
        },
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "Component": [Function],
        "context": Object {
          "environment": RelayModernEnvironment {
            "__setNet": [Function],
            "_deferrableSelections": Set {},
            "_network": Object {
              "execute": [Function],
              "executeWithEvents": [Function],
            },
            "_publishQueue": RelayPublishQueue {
              "_appliedOptimisticUpdates": Set {},
              "_backup": Object {},
              "_handlerProvider": [Function],
              "_pendingBackupRebase": false,
              "_pendingData": Set {},
              "_pendingOptimisticUpdates": Set {},
              "_pendingUpdaters": Set {},
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
            },
            "_store": RelayMarkSweepStore {
              "_gcEnabled": true,
              "_hasScheduledGC": false,
              "_index": 0,
              "_recordSource": Object {},
              "_roots": Map {},
              "_subscriptions": Set {},
              "_updatedRecordIDs": Object {},
            },
            "configName": undefined,
            "unstable_internal": Object {
              "areEqualSelectors": [Function],
              "createFragmentSpecResolver": [Function],
              "createOperationSelector": [Function],
              "getDataIDsFromObject": [Function],
              "getFragment": [Function],
              "getRequest": [Function],
              "getSelector": [Function],
              "getSelectorList": [Function],
              "getSelectorsFromObject": [Function],
              "getVariablesFromObject": [Function],
            },
          },
        },
        "props": Object {
          "children": <div />,
        },
      },
      "ref": null,
      "return": FiberNode {
        "_debugID": 47,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": FiberNode {
          "_debugID": 47,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": [Circular],
          "child": null,
          "childExpirationTime": 0,
          "effectTag": 0,
          "expirationTime": 1,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div>
              <div />
            </div>,
            "context": Object {},
            "current": [Circular],
            "didError": false,
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "expirationTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "interactionThreadID": 12,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "memoizedInteractions": Set {},
            "nextExpirationTimeToWorkOn": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "pendingInteractionMap": Map {},
            "timeoutHandle": -1,
          },
          "tag": 5,
          "treeBaseDuration": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": null,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": Object {
              "callback": null,
              "expirationTime": 1,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "environment": RelayModernEnvironment {
                        "__setNet": [Function],
                        "_deferrableSelections": Set {},
                        "_network": Object {
                          "execute": [Function],
                          "executeWithEvents": [Function],
                        },
                        "_publishQueue": RelayPublishQueue {
                          "_appliedOptimisticUpdates": Set {},
                          "_backup": Object {},
                          "_handlerProvider": [Function],
                          "_pendingBackupRebase": false,
                          "_pendingData": Set {},
                          "_pendingOptimisticUpdates": Set {},
                          "_pendingUpdaters": Set {},
                          "_store": RelayMarkSweepStore {
                            "_gcEnabled": true,
                            "_hasScheduledGC": false,
                            "_index": 0,
                            "_recordSource": Object {},
                            "_roots": Map {},
                            "_subscriptions": Set {},
                            "_updatedRecordIDs": Object {},
                          },
                        },
                        "_store": RelayMarkSweepStore {
                          "_gcEnabled": true,
                          "_hasScheduledGC": false,
                          "_index": 0,
                          "_recordSource": Object {},
                          "_roots": Map {},
                          "_subscriptions": Set {},
                          "_updatedRecordIDs": Object {},
                        },
                        "configName": undefined,
                        "unstable_internal": Object {
                          "areEqualSelectors": [Function],
                          "createFragmentSpecResolver": [Function],
                          "createOperationSelector": [Function],
                          "getDataIDsFromObject": [Function],
                          "getFragment": [Function],
                          "getRequest": [Function],
                          "getSelector": [Function],
                          "getSelectorList": [Function],
                          "getSelectorsFromObject": [Function],
                          "getVariablesFromObject": [Function],
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "children": <div />,
                    }
                  }
                />,
              },
              "tag": 0,
            },
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": Object {
              "callback": null,
              "expirationTime": 1,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "environment": RelayModernEnvironment {
                        "__setNet": [Function],
                        "_deferrableSelections": Set {},
                        "_network": Object {
                          "execute": [Function],
                          "executeWithEvents": [Function],
                        },
                        "_publishQueue": RelayPublishQueue {
                          "_appliedOptimisticUpdates": Set {},
                          "_backup": Object {},
                          "_handlerProvider": [Function],
                          "_pendingBackupRebase": false,
                          "_pendingData": Set {},
                          "_pendingOptimisticUpdates": Set {},
                          "_pendingUpdaters": Set {},
                          "_store": RelayMarkSweepStore {
                            "_gcEnabled": true,
                            "_hasScheduledGC": false,
                            "_index": 0,
                            "_recordSource": Object {},
                            "_roots": Map {},
                            "_subscriptions": Set {},
                            "_updatedRecordIDs": Object {},
                          },
                        },
                        "_store": RelayMarkSweepStore {
                          "_gcEnabled": true,
                          "_hasScheduledGC": false,
                          "_index": 0,
                          "_recordSource": Object {},
                          "_roots": Map {},
                          "_subscriptions": Set {},
                          "_updatedRecordIDs": Object {},
                        },
                        "configName": undefined,
                        "unstable_internal": Object {
                          "areEqualSelectors": [Function],
                          "createFragmentSpecResolver": [Function],
                          "createOperationSelector": [Function],
                          "getDataIDsFromObject": [Function],
                          "getFragment": [Function],
                          "getRequest": [Function],
                          "getSelector": [Function],
                          "getSelectorList": [Function],
                          "getSelectorsFromObject": [Function],
                          "getVariablesFromObject": [Function],
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "children": <div />,
                    }
                  }
                />,
              },
              "tag": 0,
            },
          },
        },
        "child": [Circular],
        "childExpirationTime": 0,
        "effectTag": 32,
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": null,
        "memoizedState": Object {
          "element": <WrapperComponent
            Component={[Function]}
            context={
              Object {
                "environment": RelayModernEnvironment {
                  "__setNet": [Function],
                  "_deferrableSelections": Set {},
                  "_network": Object {
                    "execute": [Function],
                    "executeWithEvents": [Function],
                  },
                  "_publishQueue": RelayPublishQueue {
                    "_appliedOptimisticUpdates": Set {},
                    "_backup": Object {},
                    "_handlerProvider": [Function],
                    "_pendingBackupRebase": false,
                    "_pendingData": Set {},
                    "_pendingOptimisticUpdates": Set {},
                    "_pendingUpdaters": Set {},
                    "_store": RelayMarkSweepStore {
                      "_gcEnabled": true,
                      "_hasScheduledGC": false,
                      "_index": 0,
                      "_recordSource": Object {},
                      "_roots": Map {},
                      "_subscriptions": Set {},
                      "_updatedRecordIDs": Object {},
                    },
                  },
                  "_store": RelayMarkSweepStore {
                    "_gcEnabled": true,
                    "_hasScheduledGC": false,
                    "_index": 0,
                    "_recordSource": Object {},
                    "_roots": Map {},
                    "_subscriptions": Set {},
                    "_updatedRecordIDs": Object {},
                  },
                  "configName": undefined,
                  "unstable_internal": Object {
                    "areEqualSelectors": [Function],
                    "createFragmentSpecResolver": [Function],
                    "createOperationSelector": [Function],
                    "getDataIDsFromObject": [Function],
                    "getFragment": [Function],
                    "getRequest": [Function],
                    "getSelector": [Function],
                    "getSelectorList": [Function],
                    "getSelectorsFromObject": [Function],
                    "getVariablesFromObject": [Function],
                  },
                },
              }
            }
            props={
              Object {
                "children": <div />,
              }
            }
          />,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <div />
          </div>,
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "interactionThreadID": 12,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "timeoutHandle": -1,
        },
        "tag": 5,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "environment": RelayModernEnvironment {
                    "__setNet": [Function],
                    "_deferrableSelections": Set {},
                    "_network": Object {
                      "execute": [Function],
                      "executeWithEvents": [Function],
                    },
                    "_publishQueue": RelayPublishQueue {
                      "_appliedOptimisticUpdates": Set {},
                      "_backup": Object {},
                      "_handlerProvider": [Function],
                      "_pendingBackupRebase": false,
                      "_pendingData": Set {},
                      "_pendingOptimisticUpdates": Set {},
                      "_pendingUpdaters": Set {},
                      "_store": RelayMarkSweepStore {
                        "_gcEnabled": true,
                        "_hasScheduledGC": false,
                        "_index": 0,
                        "_recordSource": Object {},
                        "_roots": Map {},
                        "_subscriptions": Set {},
                        "_updatedRecordIDs": Object {},
                      },
                    },
                    "_store": RelayMarkSweepStore {
                      "_gcEnabled": true,
                      "_hasScheduledGC": false,
                      "_index": 0,
                      "_recordSource": Object {},
                      "_roots": Map {},
                      "_subscriptions": Set {},
                      "_updatedRecordIDs": Object {},
                    },
                    "configName": undefined,
                    "unstable_internal": Object {
                      "areEqualSelectors": [Function],
                      "createFragmentSpecResolver": [Function],
                      "createOperationSelector": [Function],
                      "getDataIDsFromObject": [Function],
                      "getFragment": [Function],
                      "getRequest": [Function],
                      "getSelector": [Function],
                      "getSelectorList": [Function],
                      "getSelectorsFromObject": [Function],
                      "getVariablesFromObject": [Function],
                    },
                  },
                }
              }
              props={
                Object {
                  "children": <div />,
                }
              }
            />,
          },
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": WrapperComponent {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "Component": [Function],
          "context": Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_deferrableSelections": Set {},
              "_network": Object {
                "execute": [Function],
                "executeWithEvents": [Function],
              },
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_gcEnabled": true,
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {},
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getRequest": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
          },
          "props": Object {
            "children": <div />,
          },
        },
        "refs": Object {},
        "state": Object {
          "context": Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_deferrableSelections": Set {},
              "_network": Object {
                "execute": [Function],
                "executeWithEvents": [Function],
              },
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_gcEnabled": true,
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {},
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getRequest": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
          },
          "mount": true,
          "props": Object {
            "children": <div />,
          },
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 2,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": null,
    },
    "_debugSource": null,
    "actualDuration": 0,
    "actualStartTime": -1,
    "alternate": null,
    "child": FiberNode {
      "_debugID": 51,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": [Circular],
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": FiberNode {
        "_debugID": 52,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": null,
        "childExpirationTime": 0,
        "effectTag": 0,
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": ".0",
        "lastEffect": null,
        "memoizedProps": Object {
          "config": null,
          "environment": null,
        },
        "memoizedState": null,
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "config": null,
          "environment": null,
        },
        "ref": null,
        "return": [Circular],
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": <div />,
        "tag": 7,
        "treeBaseDuration": 0,
        "type": "div",
        "updateQueue": null,
      },
      "childExpirationTime": 0,
      "effectTag": 1,
      "expirationTime": 0,
      "firstContextDependency": Object {
        "context": Object {
          "$$typeof": Symbol(react.context),
          "Consumer": [Circular],
          "Provider": Object {
            "$$typeof": Symbol(react.provider),
            "_context": [Circular],
          },
          "_calculateChangedBits": null,
          "_currentRenderer": null,
          "_currentRenderer2": null,
          "_currentValue": Object {
            "config": null,
            "environment": null,
          },
          "_currentValue2": Object {
            "config": null,
            "environment": null,
          },
          "unstable_read": [Function],
        },
        "next": null,
        "observedBits": 1073741823,
      },
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "children": [Function],
      },
      "memoizedState": null,
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "children": [Function],
      },
      "ref": null,
      "return": [Circular],
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": null,
      "tag": 11,
      "treeBaseDuration": 0,
      "type": Object {
        "$$typeof": Symbol(react.context),
        "Consumer": [Circular],
        "Provider": Object {
          "$$typeof": Symbol(react.provider),
          "_context": [Circular],
        },
        "_calculateChangedBits": null,
        "_currentRenderer": null,
        "_currentRenderer2": null,
        "_currentValue": Object {
          "config": null,
          "environment": null,
        },
        "_currentValue2": Object {
          "config": null,
          "environment": null,
        },
        "unstable_read": [Function],
      },
      "updateQueue": null,
    },
    "childExpirationTime": 0,
    "effectTag": 1,
    "expirationTime": 0,
    "firstContextDependency": null,
    "firstEffect": null,
    "index": 0,
    "key": null,
    "lastEffect": null,
    "memoizedProps": Object {
      "children": <div />,
    },
    "memoizedState": null,
    "mode": 0,
    "nextEffect": null,
    "pendingProps": Object {
      "children": <div />,
    },
    "ref": null,
    "return": FiberNode {
      "_debugID": 49,
      "_debugIsCurrentlyTiming": false,
      "_debugOwner": null,
      "_debugSource": null,
      "actualDuration": 0,
      "actualStartTime": -1,
      "alternate": null,
      "child": [Circular],
      "childExpirationTime": 0,
      "effectTag": 1,
      "expirationTime": 0,
      "firstContextDependency": null,
      "firstEffect": null,
      "index": 0,
      "key": null,
      "lastEffect": null,
      "memoizedProps": Object {
        "Component": [Function],
        "context": Object {
          "environment": RelayModernEnvironment {
            "__setNet": [Function],
            "_deferrableSelections": Set {},
            "_network": Object {
              "execute": [Function],
              "executeWithEvents": [Function],
            },
            "_publishQueue": RelayPublishQueue {
              "_appliedOptimisticUpdates": Set {},
              "_backup": Object {},
              "_handlerProvider": [Function],
              "_pendingBackupRebase": false,
              "_pendingData": Set {},
              "_pendingOptimisticUpdates": Set {},
              "_pendingUpdaters": Set {},
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
            },
            "_store": RelayMarkSweepStore {
              "_gcEnabled": true,
              "_hasScheduledGC": false,
              "_index": 0,
              "_recordSource": Object {},
              "_roots": Map {},
              "_subscriptions": Set {},
              "_updatedRecordIDs": Object {},
            },
            "configName": undefined,
            "unstable_internal": Object {
              "areEqualSelectors": [Function],
              "createFragmentSpecResolver": [Function],
              "createOperationSelector": [Function],
              "getDataIDsFromObject": [Function],
              "getFragment": [Function],
              "getRequest": [Function],
              "getSelector": [Function],
              "getSelectorList": [Function],
              "getSelectorsFromObject": [Function],
              "getVariablesFromObject": [Function],
            },
          },
        },
        "props": Object {
          "children": <div />,
        },
      },
      "memoizedState": Object {
        "context": Object {
          "environment": RelayModernEnvironment {
            "__setNet": [Function],
            "_deferrableSelections": Set {},
            "_network": Object {
              "execute": [Function],
              "executeWithEvents": [Function],
            },
            "_publishQueue": RelayPublishQueue {
              "_appliedOptimisticUpdates": Set {},
              "_backup": Object {},
              "_handlerProvider": [Function],
              "_pendingBackupRebase": false,
              "_pendingData": Set {},
              "_pendingOptimisticUpdates": Set {},
              "_pendingUpdaters": Set {},
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
            },
            "_store": RelayMarkSweepStore {
              "_gcEnabled": true,
              "_hasScheduledGC": false,
              "_index": 0,
              "_recordSource": Object {},
              "_roots": Map {},
              "_subscriptions": Set {},
              "_updatedRecordIDs": Object {},
            },
            "configName": undefined,
            "unstable_internal": Object {
              "areEqualSelectors": [Function],
              "createFragmentSpecResolver": [Function],
              "createOperationSelector": [Function],
              "getDataIDsFromObject": [Function],
              "getFragment": [Function],
              "getRequest": [Function],
              "getSelector": [Function],
              "getSelectorList": [Function],
              "getSelectorsFromObject": [Function],
              "getVariablesFromObject": [Function],
            },
          },
        },
        "mount": true,
        "props": Object {
          "children": <div />,
        },
      },
      "mode": 0,
      "nextEffect": null,
      "pendingProps": Object {
        "Component": [Function],
        "context": Object {
          "environment": RelayModernEnvironment {
            "__setNet": [Function],
            "_deferrableSelections": Set {},
            "_network": Object {
              "execute": [Function],
              "executeWithEvents": [Function],
            },
            "_publishQueue": RelayPublishQueue {
              "_appliedOptimisticUpdates": Set {},
              "_backup": Object {},
              "_handlerProvider": [Function],
              "_pendingBackupRebase": false,
              "_pendingData": Set {},
              "_pendingOptimisticUpdates": Set {},
              "_pendingUpdaters": Set {},
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
            },
            "_store": RelayMarkSweepStore {
              "_gcEnabled": true,
              "_hasScheduledGC": false,
              "_index": 0,
              "_recordSource": Object {},
              "_roots": Map {},
              "_subscriptions": Set {},
              "_updatedRecordIDs": Object {},
            },
            "configName": undefined,
            "unstable_internal": Object {
              "areEqualSelectors": [Function],
              "createFragmentSpecResolver": [Function],
              "createOperationSelector": [Function],
              "getDataIDsFromObject": [Function],
              "getFragment": [Function],
              "getRequest": [Function],
              "getSelector": [Function],
              "getSelectorList": [Function],
              "getSelectorsFromObject": [Function],
              "getVariablesFromObject": [Function],
            },
          },
        },
        "props": Object {
          "children": <div />,
        },
      },
      "ref": null,
      "return": FiberNode {
        "_debugID": 47,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": null,
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": FiberNode {
          "_debugID": 47,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": [Circular],
          "child": null,
          "childExpirationTime": 0,
          "effectTag": 0,
          "expirationTime": 1,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": null,
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": null,
          "ref": null,
          "return": null,
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": Object {
            "containerInfo": <div>
              <div />
            </div>,
            "context": Object {},
            "current": [Circular],
            "didError": false,
            "earliestPendingTime": 0,
            "earliestSuspendedTime": 0,
            "expirationTime": 0,
            "finishedWork": null,
            "firstBatch": null,
            "hydrate": false,
            "interactionThreadID": 12,
            "latestPendingTime": 0,
            "latestPingedTime": 0,
            "latestSuspendedTime": 0,
            "memoizedInteractions": Set {},
            "nextExpirationTimeToWorkOn": 0,
            "nextScheduledRoot": null,
            "pendingChildren": null,
            "pendingCommitExpirationTime": 0,
            "pendingContext": null,
            "pendingInteractionMap": Map {},
            "timeoutHandle": -1,
          },
          "tag": 5,
          "treeBaseDuration": 0,
          "type": null,
          "updateQueue": Object {
            "baseState": null,
            "firstCapturedEffect": null,
            "firstCapturedUpdate": null,
            "firstEffect": null,
            "firstUpdate": Object {
              "callback": null,
              "expirationTime": 1,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "environment": RelayModernEnvironment {
                        "__setNet": [Function],
                        "_deferrableSelections": Set {},
                        "_network": Object {
                          "execute": [Function],
                          "executeWithEvents": [Function],
                        },
                        "_publishQueue": RelayPublishQueue {
                          "_appliedOptimisticUpdates": Set {},
                          "_backup": Object {},
                          "_handlerProvider": [Function],
                          "_pendingBackupRebase": false,
                          "_pendingData": Set {},
                          "_pendingOptimisticUpdates": Set {},
                          "_pendingUpdaters": Set {},
                          "_store": RelayMarkSweepStore {
                            "_gcEnabled": true,
                            "_hasScheduledGC": false,
                            "_index": 0,
                            "_recordSource": Object {},
                            "_roots": Map {},
                            "_subscriptions": Set {},
                            "_updatedRecordIDs": Object {},
                          },
                        },
                        "_store": RelayMarkSweepStore {
                          "_gcEnabled": true,
                          "_hasScheduledGC": false,
                          "_index": 0,
                          "_recordSource": Object {},
                          "_roots": Map {},
                          "_subscriptions": Set {},
                          "_updatedRecordIDs": Object {},
                        },
                        "configName": undefined,
                        "unstable_internal": Object {
                          "areEqualSelectors": [Function],
                          "createFragmentSpecResolver": [Function],
                          "createOperationSelector": [Function],
                          "getDataIDsFromObject": [Function],
                          "getFragment": [Function],
                          "getRequest": [Function],
                          "getSelector": [Function],
                          "getSelectorList": [Function],
                          "getSelectorsFromObject": [Function],
                          "getVariablesFromObject": [Function],
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "children": <div />,
                    }
                  }
                />,
              },
              "tag": 0,
            },
            "lastCapturedEffect": null,
            "lastCapturedUpdate": null,
            "lastEffect": null,
            "lastUpdate": Object {
              "callback": null,
              "expirationTime": 1,
              "next": null,
              "nextEffect": null,
              "payload": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={
                    Object {
                      "environment": RelayModernEnvironment {
                        "__setNet": [Function],
                        "_deferrableSelections": Set {},
                        "_network": Object {
                          "execute": [Function],
                          "executeWithEvents": [Function],
                        },
                        "_publishQueue": RelayPublishQueue {
                          "_appliedOptimisticUpdates": Set {},
                          "_backup": Object {},
                          "_handlerProvider": [Function],
                          "_pendingBackupRebase": false,
                          "_pendingData": Set {},
                          "_pendingOptimisticUpdates": Set {},
                          "_pendingUpdaters": Set {},
                          "_store": RelayMarkSweepStore {
                            "_gcEnabled": true,
                            "_hasScheduledGC": false,
                            "_index": 0,
                            "_recordSource": Object {},
                            "_roots": Map {},
                            "_subscriptions": Set {},
                            "_updatedRecordIDs": Object {},
                          },
                        },
                        "_store": RelayMarkSweepStore {
                          "_gcEnabled": true,
                          "_hasScheduledGC": false,
                          "_index": 0,
                          "_recordSource": Object {},
                          "_roots": Map {},
                          "_subscriptions": Set {},
                          "_updatedRecordIDs": Object {},
                        },
                        "configName": undefined,
                        "unstable_internal": Object {
                          "areEqualSelectors": [Function],
                          "createFragmentSpecResolver": [Function],
                          "createOperationSelector": [Function],
                          "getDataIDsFromObject": [Function],
                          "getFragment": [Function],
                          "getRequest": [Function],
                          "getSelector": [Function],
                          "getSelectorList": [Function],
                          "getSelectorsFromObject": [Function],
                          "getVariablesFromObject": [Function],
                        },
                      },
                    }
                  }
                  props={
                    Object {
                      "children": <div />,
                    }
                  }
                />,
              },
              "tag": 0,
            },
          },
        },
        "child": [Circular],
        "childExpirationTime": 0,
        "effectTag": 32,
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": [Circular],
        "index": 0,
        "key": null,
        "lastEffect": [Circular],
        "memoizedProps": null,
        "memoizedState": Object {
          "element": <WrapperComponent
            Component={[Function]}
            context={
              Object {
                "environment": RelayModernEnvironment {
                  "__setNet": [Function],
                  "_deferrableSelections": Set {},
                  "_network": Object {
                    "execute": [Function],
                    "executeWithEvents": [Function],
                  },
                  "_publishQueue": RelayPublishQueue {
                    "_appliedOptimisticUpdates": Set {},
                    "_backup": Object {},
                    "_handlerProvider": [Function],
                    "_pendingBackupRebase": false,
                    "_pendingData": Set {},
                    "_pendingOptimisticUpdates": Set {},
                    "_pendingUpdaters": Set {},
                    "_store": RelayMarkSweepStore {
                      "_gcEnabled": true,
                      "_hasScheduledGC": false,
                      "_index": 0,
                      "_recordSource": Object {},
                      "_roots": Map {},
                      "_subscriptions": Set {},
                      "_updatedRecordIDs": Object {},
                    },
                  },
                  "_store": RelayMarkSweepStore {
                    "_gcEnabled": true,
                    "_hasScheduledGC": false,
                    "_index": 0,
                    "_recordSource": Object {},
                    "_roots": Map {},
                    "_subscriptions": Set {},
                    "_updatedRecordIDs": Object {},
                  },
                  "configName": undefined,
                  "unstable_internal": Object {
                    "areEqualSelectors": [Function],
                    "createFragmentSpecResolver": [Function],
                    "createOperationSelector": [Function],
                    "getDataIDsFromObject": [Function],
                    "getFragment": [Function],
                    "getRequest": [Function],
                    "getSelector": [Function],
                    "getSelectorList": [Function],
                    "getSelectorsFromObject": [Function],
                    "getVariablesFromObject": [Function],
                  },
                },
              }
            }
            props={
              Object {
                "children": <div />,
              }
            }
          />,
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": null,
        "ref": null,
        "return": null,
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": Object {
          "containerInfo": <div>
            <div />
          </div>,
          "context": Object {},
          "current": [Circular],
          "didError": false,
          "earliestPendingTime": 0,
          "earliestSuspendedTime": 0,
          "expirationTime": 0,
          "finishedWork": null,
          "firstBatch": null,
          "hydrate": false,
          "interactionThreadID": 12,
          "latestPendingTime": 0,
          "latestPingedTime": 0,
          "latestSuspendedTime": 0,
          "memoizedInteractions": Set {},
          "nextExpirationTimeToWorkOn": 0,
          "nextScheduledRoot": null,
          "pendingChildren": null,
          "pendingCommitExpirationTime": 0,
          "pendingContext": null,
          "pendingInteractionMap": Map {},
          "timeoutHandle": -1,
        },
        "tag": 5,
        "treeBaseDuration": 0,
        "type": null,
        "updateQueue": Object {
          "baseState": Object {
            "element": <WrapperComponent
              Component={[Function]}
              context={
                Object {
                  "environment": RelayModernEnvironment {
                    "__setNet": [Function],
                    "_deferrableSelections": Set {},
                    "_network": Object {
                      "execute": [Function],
                      "executeWithEvents": [Function],
                    },
                    "_publishQueue": RelayPublishQueue {
                      "_appliedOptimisticUpdates": Set {},
                      "_backup": Object {},
                      "_handlerProvider": [Function],
                      "_pendingBackupRebase": false,
                      "_pendingData": Set {},
                      "_pendingOptimisticUpdates": Set {},
                      "_pendingUpdaters": Set {},
                      "_store": RelayMarkSweepStore {
                        "_gcEnabled": true,
                        "_hasScheduledGC": false,
                        "_index": 0,
                        "_recordSource": Object {},
                        "_roots": Map {},
                        "_subscriptions": Set {},
                        "_updatedRecordIDs": Object {},
                      },
                    },
                    "_store": RelayMarkSweepStore {
                      "_gcEnabled": true,
                      "_hasScheduledGC": false,
                      "_index": 0,
                      "_recordSource": Object {},
                      "_roots": Map {},
                      "_subscriptions": Set {},
                      "_updatedRecordIDs": Object {},
                    },
                    "configName": undefined,
                    "unstable_internal": Object {
                      "areEqualSelectors": [Function],
                      "createFragmentSpecResolver": [Function],
                      "createOperationSelector": [Function],
                      "getDataIDsFromObject": [Function],
                      "getFragment": [Function],
                      "getRequest": [Function],
                      "getSelector": [Function],
                      "getSelectorList": [Function],
                      "getSelectorsFromObject": [Function],
                      "getVariablesFromObject": [Function],
                    },
                  },
                }
              }
              props={
                Object {
                  "children": <div />,
                }
              }
            />,
          },
          "firstCapturedEffect": null,
          "firstCapturedUpdate": null,
          "firstEffect": null,
          "firstUpdate": null,
          "lastCapturedEffect": null,
          "lastCapturedUpdate": null,
          "lastEffect": null,
          "lastUpdate": null,
        },
      },
      "selfBaseDuration": 0,
      "sibling": null,
      "stateNode": WrapperComponent {
        "_reactInternalFiber": [Circular],
        "_reactInternalInstance": Object {},
        "context": Object {},
        "props": Object {
          "Component": [Function],
          "context": Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_deferrableSelections": Set {},
              "_network": Object {
                "execute": [Function],
                "executeWithEvents": [Function],
              },
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_gcEnabled": true,
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {},
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getRequest": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
          },
          "props": Object {
            "children": <div />,
          },
        },
        "refs": Object {},
        "state": Object {
          "context": Object {
            "environment": RelayModernEnvironment {
              "__setNet": [Function],
              "_deferrableSelections": Set {},
              "_network": Object {
                "execute": [Function],
                "executeWithEvents": [Function],
              },
              "_publishQueue": RelayPublishQueue {
                "_appliedOptimisticUpdates": Set {},
                "_backup": Object {},
                "_handlerProvider": [Function],
                "_pendingBackupRebase": false,
                "_pendingData": Set {},
                "_pendingOptimisticUpdates": Set {},
                "_pendingUpdaters": Set {},
                "_store": RelayMarkSweepStore {
                  "_gcEnabled": true,
                  "_hasScheduledGC": false,
                  "_index": 0,
                  "_recordSource": Object {},
                  "_roots": Map {},
                  "_subscriptions": Set {},
                  "_updatedRecordIDs": Object {},
                },
              },
              "_store": RelayMarkSweepStore {
                "_gcEnabled": true,
                "_hasScheduledGC": false,
                "_index": 0,
                "_recordSource": Object {},
                "_roots": Map {},
                "_subscriptions": Set {},
                "_updatedRecordIDs": Object {},
              },
              "configName": undefined,
              "unstable_internal": Object {
                "areEqualSelectors": [Function],
                "createFragmentSpecResolver": [Function],
                "createOperationSelector": [Function],
                "getDataIDsFromObject": [Function],
                "getFragment": [Function],
                "getRequest": [Function],
                "getSelector": [Function],
                "getSelectorList": [Function],
                "getSelectorsFromObject": [Function],
                "getVariablesFromObject": [Function],
              },
            },
          },
          "mount": true,
          "props": Object {
            "children": <div />,
          },
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "tag": 2,
      "treeBaseDuration": 0,
      "type": [Function],
      "updateQueue": null,
    },
    "selfBaseDuration": 0,
    "sibling": null,
    "stateNode": [Circular],
    "tag": 2,
    "treeBaseDuration": 0,
    "type": [Function],
    "updateQueue": null,
  },
  "_reactInternalInstance": Object {},
  "context": Object {},
  "props": Object {
    "children": <div />,
  },
  "refs": Object {},
  "state": null,
  "updater": Object {
    "enqueueForceUpdate": [Function],
    "enqueueReplaceState": [Function],
    "enqueueSetState": [Function],
    "isMounted": [Function],
  },
}
`;
